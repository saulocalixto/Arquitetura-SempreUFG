buildscript {
	ext {
		springBootVersion = '2.0.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.github/saulocalixto/Solução/InterfaceGrafica'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework.boot:spring-boot-starter-jersey')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	runtime('com.h2database:h2')
	compileOnly('org.projectlombok:lombok')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
}

task frontBin(type: InstallNodeAndNpm) {
    description "shortcut for installing nodejs and npm binaries"
    installDirectoryPath = "/bin"
}

task npmInstall(type: Npm) {
    description "shortcut for executing 'npm install'"
    npmArgs "install"
}

task gruntBuild(type: Grunt) {
    description "shortcut for executing 'grunt build'"
    gruntArgs "build"
}

task gulpTask(type: Gulp) {
}

frontendConfig {
    workingDirectoryPath = "src/main/aem/jcr_root/etc/designs/example/clientlibs/"
    installDirectoryPath = "/bin"
}
